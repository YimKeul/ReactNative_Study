스타일링

RN에서는 JS를 이용해 스타일링 가능
컴포넌트에는 style 속성이 있고 , 이 속성에 인랑니 ㅍ스타일을 적요하는 방법과 스타일시트 (StyleSheet)에 정의도니 스타일을 사용하는 방법이 있다

인라인 스타일링
HTML의 인라인 스타일링처럼 컴포넌트에 직접 스타일을 입력하는 방식
다만 HTML에서는 문자열의 형태로 스타일을 입력하지만, RN에서는 객체형태로 전달해야한다는 차이점

클래스 스타일링
스타일싵에 정의된 스타일을 사용하는 방법
css 유사

여러개의 스타일 적용
스타일 작성에서 중복된 스타일이 있을 경우
배열로 사용
주의사항 적용 순서
뒤에 있는 스타일이 앞에 있는 스타일을 덮는다 ==> 결과 : 뒤에 있는 것으로 적용됨

외부 스타일 이용하기
우리가 만든 스타일을 다양한 곳에서 사용하고 싶은 경우 어떻게 해야하는가
상황에 따라 외부 파일에 스타일을 정의하고 여러 개의 파일에서 스타일을 공통으로 사용하는 경우

flex와 범위
화면의 범위를 정하는 속성에는 폭과 넓이를 나타내는 widh와 height가 있다
RN에서도 width와 height를 설정 할 수 있다. 
일반적으로 width와 height로 설정하면 각 기기마다의 차이점을 유동적으로 해결할 수 없다. 그래서 flex를 사용한다.
flex : 비율로 화면을 구성한다.

정렬
flex를 이용하면 컴포넌트가 원하는 영역을 차지할 수 있게 적용
이제는 컴포넌트를 정렬하는 방법
flexDirection : (defult값 : 기본 구성은 위에서 아래로) column , column-reverse, row, row-reverse  쌓이는 방향을 나타낸다

컴포넌트를 배치할 방향을 결정한 후 방향에 따라 결정하는 방식을 결정하는 속성이 justifyContnet 와 alignItems이다
justifyContnet : flexDirection에서 결정한 방향과 동일한 방향으로 정렬하는 속성
alignItems : flexDirection에서 결정한 방향과 수직인 방향으로 정렬하는 속성


justifyContnet
-
flex-start : 시작점에서부터 정렬(기본값)
flex-end : 끝에서부터 정렬
center : 중앙 정렬
space-between : 컴포넌트 사이의 공간을 동일하게 만들어서 정렬
space-around : 컴포넌트 각각의 주변 공간을 동일하게 만들어서 정렬
space-evenly :  컴포넌트 사이와 양 끝에서 동일한 공간을 만들어서 정렬

alignItems
-
flex-start : 시작점에서부터 정렬(기본값)
flex-end : 끝에서부터 정렬
center : 중앙정렬
stretch : alignItems의 방향으로 컴포넌트 확장
baseline : 컴포넌트 내부의 텍스트(text) 베이스라인(baseline)을 기준으로 정렬


그림자
shadowColor : 그림자 색 설정
shadowOffset : width와 height값을 지정하여 그림자 거리 설정
shadowOpacity : 그림자의 불투명도 설정
shadowRadius : 그림자의 흐림 반경 설정
이 네가지는 ios에만 적용되는 속성들이다

안드로이드에서 그림자를 표현하려면 elevation 속성 사용


스타일드 컴포넌트
js 파일 안에 스타일을 작성하는 CSS-in-JS 라이브러리이며 스타일이 적용된 컴포넌트라고 생각하면 된다
설치방법 : npm install styled-componets
사용 예시
import styled from 'styled-components/native'

const MytextComponent - styled.Text`
  color : "red"
  `;
------------------
styled.[컴포넌트 이름] 형태 뒤에 백틱(`)을 사용하여 만든 문자열을 붙이고 그 안에 스타일을 지정하면 된다. ==> 태그드 템플릿 리터럴 



